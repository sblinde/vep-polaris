{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udf1f VEP Polaris Toolkit","text":"<p>VEP Polaris is a modular command-line toolkit to validate and manage Ensembl VEP plugin files.</p> <p>This toolkit helps students, researchers, bioinformaticians, and engineers confidently navigate plugin file compatibility and formatting.</p>"},{"location":"#available-tools","title":"\ud83d\udcda Available Tools","text":"Tool Description <code>plugin-inspect</code> Check chromosome formats and data in plugin files"},{"location":"#testing","title":"\ud83e\uddea Testing","text":"<p>To learn how to run and add tests, see the <code>testing.md</code> guide.</p>"},{"location":"#getting-started","title":"\ud83d\ude80 Getting Started","text":"<ol> <li>Clone the repo</li> <li>Run <code>make install</code></li> <li>Use <code>vep-polaris</code> to run tools like <code>plugin-inspect</code></li> </ol> <pre><code>vep-polaris plugin-inspect --dir /path/to/Plugins\n</code></pre> <p>See each tool\u2019s individual help (<code>--help</code>) or docs for more details.</p>"},{"location":"plugin-inspect/","title":"\ud83d\udd0d plugin-inspect","text":"<p><code>plugin-inspect</code> is a diagnostic tool included in the <code>vep-polaris</code> toolkit. It scans VEP plugin data files to check for:</p> <ul> <li>Whether files contain usable data (non-comment lines)</li> <li>What chromosome format they use (e.g., <code>chr1</code> vs <code>1</code>)</li> <li>Whether any files may cause problems with VEP annotation due to format mismatches</li> </ul>"},{"location":"plugin-inspect/#why-this-tool-exists","title":"\ud83e\udde0 Why This Tool Exists","text":"<p>Ensembl VEP is strict about chromosome naming. If your input VCF uses <code>chr1</code> but a plugin file uses <code>1</code>, annotations may silently fail or be skipped. <code>plugin-inspect</code> helps detect and prevent these issues.</p>"},{"location":"plugin-inspect/#usage","title":"\ud83d\udee0\ufe0f Usage","text":"<pre><code>vep-polaris plugin-inspect [--dir /path/to/plugins] [--no-color] [--help]\n</code></pre>"},{"location":"plugin-inspect/#options","title":"Options","text":"Option Description <code>--dir</code> Directory containing plugin data files (default: <code>~/vep/Plugins</code>) <code>--no-color</code> Disables ANSI color codes (useful for logging) <code>--help</code> Shows usage information"},{"location":"plugin-inspect/#example-output","title":"\ud83d\udcc4 Example Output","text":"<pre><code>\ud83d\udd0d Scanning plugin data files in: /vep/Plugins\n-------------------------------------------------------------\nFile                                      | Chromosome Format    | Header/First Line\n-------------------------------------------------------------\nrevel_ready.tsv                           | N                    | 1  35142  35142  GA ...\nspliceai_scores.masked.snv.hg37.vcf.gz   | chrN                 | &gt;chr1\nwhole_genome_SNVs.tsv.gz                 | \u2753 Unknown            | \u26a0\ufe0f Empty or comment-only file...\n</code></pre>"},{"location":"plugin-inspect/#file-types-supported","title":"\ud83d\udce6 File Types Supported","text":"<p><code>plugin-inspect</code> scans files with the following extensions:</p> <ul> <li><code>.tsv</code>, <code>.txt</code>, <code>.dat</code>, <code>.gz</code></li> </ul>"},{"location":"plugin-inspect/#use-cases","title":"\ud83e\uddf0 Use Cases","text":"<ul> <li>Before running VEP on a new dataset</li> <li>When adding or updating plugin files</li> <li>During plugin development or debugging</li> <li>As part of a CI pipeline to validate plugin integrity</li> </ul>"},{"location":"plugin-inspect/#tests","title":"\ud83e\uddea Tests","text":"<p>See the testing documentation to learn how to run automated test coverage for this tool.</p>"},{"location":"testing/","title":"\ud83e\uddea Testing VEP Polaris","text":"<p>This project includes test scripts to verify that each tool behaves as expected. Tests are written in portable Bash and use only standard Unix utilities.</p>"},{"location":"testing/#requirements","title":"\ud83d\udd27 Requirements","text":"<ul> <li>Bash (4.x or higher)</li> <li>Core Unix utilities: <code>grep</code>, <code>gzip</code>, <code>head</code>, <code>mkdir</code>, <code>rm</code>, <code>echo</code>, etc.</li> <li>Optional: Node.js (for <code>npm run test</code> command more easily)</li> </ul>"},{"location":"testing/#run-all-tests","title":"\ud83d\ude80 Run All Tests","text":"<p>If you've already installed the toolkit:</p> <pre><code>npm test\n</code></pre> <p>This runs the <code>run-tests.sh</code> script, which locates and executes all test scripts in <code>test/</code>.</p> <p>Alternatively, run it manually:</p> <pre><code>chmod +x run-tests.sh # needs to be run initially\n./run-tests.sh\n</code></pre> <p>This script will:</p> <ul> <li>Find all test scripts in the <code>test/</code> directory (with filenames like <code>test-*.sh</code>)</li> <li>Run each one</li> <li>Exit with an error if any test fails</li> </ul>"},{"location":"testing/#run-an-individual-test","title":"\ud83e\uddea Run an Individual Test","text":"<p>To run a single test directly:</p> <pre><code>bash test/test-plugin-inspect.sh\n</code></pre> <p>Useful when debugging or developing a specific tool.</p>"},{"location":"testing/#adding-a-new-test","title":"\ud83d\udee0 Adding a New Test","text":"<p>To add a new test script:</p> <ol> <li>Name it <code>test/test-&lt;tool&gt;.sh</code></li> <li> <p>Make it executable:</p> <p><code>bash chmod +x test/test-yourtool.sh</code></p> </li> <li> <p>It will automatically be picked up by <code>./run-tests.sh</code></p> </li> </ol>"},{"location":"testing/#expected-output","title":"\u2705 Expected Output","text":"<p>If all tests pass, you'll see something like:</p> <pre><code>\ud83d\udd2c Running all VEP Polaris tests...\n\u27a1\ufe0f  Running: test/test-plugin-inspect.sh\n\u2714 PASS: Plain numeric chromosome format recognized\n\u2714 PASS: chrN format recognized\n\u2714 PASS: Warning for comment-only file shown\n\n\u2705 All tests passed!\n</code></pre> <p>If a test fails, it will print a clear failure message and exit:</p> <pre><code>\u2718 FAIL: Expected output to contain: plain.tsv\n</code></pre>"},{"location":"testing/#continuous-integration-optional","title":"\ud83e\udd16 Continuous Integration (Optional)","text":"<p>To include this in GitHub Actions or another CI tool, add a step to your workflow:</p> <pre><code>- name: Run VEP Polaris tests\n  run: ./run-tests.sh\n</code></pre> <p>For more information about individual tools, see the documentation index.</p> <pre><code>vep-polaris &lt;tool&gt; --help\n</code></pre>"}]}